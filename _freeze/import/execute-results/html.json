{
  "hash": "c1cc58c958f1e18c743abf5bda373202",
  "result": {
    "markdown": "---\ntitle: \"Importation des données\"\ntitle-block-banner: false\ndescription: \n    Informations concernant la provenance des données et leur importation. \ndate: \"2022-12-21\"\nauthor:\n  - name: \"Juliana Hubacova\"\n    url: https://github.com/VOTREUSERNAME\n    affiliation: FAS1002\n    affiliation-url: https://FAS1002.github.io/A22\n    orcid: 0000-0001-8128-783X\ncitation: true\nbibliography: references.bib\n---\n\n\nCe projet se concentre sur deux banques de données distinctes :\n\n-   **CO2 and Greenhouse Gas Emissions** : base de données sur les émissions de CO2 et de gaz à effet de serre. Mise à jour régulièrement par @owidco2. Les données sont disponibles aux liens suivants :\n\n    URL : https://ourworldindata.org/co2-and-other-greenhouse-gas-emissions\n\n    Github : https://github.com/owid/co2-data\n\n-   **Life Expectancy At Birth** : base de données sur l'espérance de vie à la naissance. Mise à jour régulièrement par @Gapminder. Les données sont disponibles au lien suivant :\n\n    URL : https://www.gapminder.org/data/documentation/gd004/\n\n\n::: {.cell}\n\n:::\n\n::: {.cell hash='import_cache/html/download_5ae403ff63f26f52eb97f86e599f94b7'}\n\n```{.r .cell-code}\nco_2_data = read.csv(\"~/Desktop/Automne 2022/FAS1002/FAS1002_projet-pratique/data/raw/owid-co2-data.csv\")\nlife_exp_continent = read_excel(\"~/Desktop/Automne 2022/FAS1002/FAS1002_projet-pratique/data/raw/Gapminder_life_expectancy_v12.xlsx\",\n                              sheet = \"data-for-regions-by-year\")\nlife_exp_country = read_excel(\"~/Desktop/Automne 2022/FAS1002/FAS1002_projet-pratique/data/raw/Gapminder_life_expectancy_v12.xlsx\", \n    sheet = \"data-for-countries-etc-by-year\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Importation banque de données OWID\nowid_url <- \"https://raw.githubusercontent.com/owid/co2-data/master/owid-co2-data.csv\"\nbase_path <- path(\"data\", \"raw\")\nfname_owid <- paste(today(),\"owid-co2-data.csv\", sep = \"_\")\nfpath_owid <- path(base_path, fname_owid)\ndata_owid <- download.file(url = owid_url, destfile = fpath_owid)\nco_2_data <- read.csv(fpath_owid)\n\n# Téléchargement quotidien \n\n#if(!file.exists(fpathowid)){\n#    file.remove(junk)\n#    download.file(url = urlowid,\n#                  destfile = fpathowid)\n#    paste(\"Le Fichier\",\n#          fpathowid,\n#          \"n'existait pas, il a donc été téléchargé à l'instant.\"\n#          )\n#} else {\n#    print(paste(\"Le Fichier\",\n#                fpathowid,\n#                \"existe déjà, il ne sera pas téléchargé à nouveau.\")\n#    )}\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}