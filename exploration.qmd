---
title: "Exploration des données"
title-block-banner: false
description: | 
  Analyse descriptive des banques de données importées
date: "2022-12-20"
author:
  - name: "Juliana Hubacova"
    url: https://github.com/VOTREUSERNAME
    affiliation: FAS1002
    affiliation-url: https://FAS1002.github.io/A22
    orcid: 0000-0001-8128-783X
citation: true
bibliography: references.bib
format :
    html : 
        df-print: kable
---

```{r echo = false}
library(tidyverse)
library(countrycode)
library(ggplot2)
```

```{r echo=false}
co_2_data = read.csv('~/Desktop/Automne 2022/FAS1002/FAS1002_Projet_brouillon/owid-co2-data.csv')
life_exp = read.csv("~/Desktop/Automne 2022/FAS1002/FAS1002_Projet_brouillon/bycontinents.csv")
```

## Analyse descriptive

1.  Banque de données sur les émissions des CO2 et les gaz à effet de serre.

```{r co2, message=false, warning= false}
# Choix de variables 
co_2_data2 = co_2_data %>% 
  select(country, year, population, gdp, ends_with("per_capita"), primary_energy_consumption, total_ghg) %>% 
  mutate(continent = countrycode(co_2_data$iso_code, "iso3c", "continent"))

# Variables manquantes 
missing = co_2_data2 %>% 
  select(country, continent) %>% 
  filter(!complete.cases(.))

# Retrait des continents dans la colonne des pays 
co_2_data3 = co_2_data2 %>% 
  drop_na(continent)
co_2_data3 = as_tibble(co_2_data3)

# Ajout de la variable du PIB par habitant
co_2_data4 = co_2_data3 %>% 
    mutate(gdp_per_capita = gdp/population)

# Moyenne du PIB/habitant par pays
co_2_data5 = co_2_data4 %>% 
    group_by(country) %>% 
    summarise(gdp_per_capita = mean(gdp_per_capita, na.rm = TRUE)) %>% 
    ungroup()

# Les pays ayant un PIB par habitant faible
co_2_data5 %>% 
    arrange(gdp_per_capita)

#Les pays ayant un PIB par habitant élevé
co_2_data5 %>% 
    arrange(- gdp_per_capita)
```

On constate que les pays avec le plus faible PIB par habitant sont le Burundi, la Guinée, le Malawi et l'Éthiopie. Ces pays font partie des pays qu'on considère comme sou-développé. Tandis que les pays les plus développé économiquement connaissent un PIB par habitant plus élevé.Le pays avec un PIB par habitant le plus élevé est le Qatar avec un montant de 60 018 USD.

Qu'en est-il d'un point de vue des continents?

```{r}
# Moyenne du PIB par habitant par continent
co_2_data6 = co_2_data3 %>% 
    group_by(continent) %>% 
    summarise(gdp = mean(gdp, na.rm = TRUE)) %>% 
    ungroup() %>% 
    rename("gdp_usd_2011" = "gdp") %>% 
    arrange(gdp_usd_2011)

ggplot(data = co_2_data6, aes(x = continent, y = gdp_usd_2011)) +
    geom_bar(stat = "identity") + 
    labs(title = "PIB par habitant en fonction des continents", 
         subtitle = "À partir des données de Our World in Data", 
         x = "Continents", 
         y = "PIB par habitant") +
    scale_x_discrete(limits = c("Asia", "Americas", "Europe", "Oceania", "Africa"))
```

2.  Banque de donnée sur l'espérance de vie à la naissance.

```{r}
# Changement de nom de variables (en lien avec la base de données CO2)
life_exp2 = life_exp %>% 
    rename("continent" = "name") %>% 
    rename("year" = "time") %>% 
    rename("lifeexp" = "Life.expectancy")

ggplot(data = life_exp2, aes(x = year, y = lifeexp, group = continent, color = continent)) +
    geom_line() +
    geom_vline(xintercept =year(Sys.time()), colour = "black", alpha = .6, linetype = "dashed") +
    annotate("text", x = year(Sys.time()), y = 50, label = "Cette année", size = 3, color = "black", alpha = .6) +
    labs(title = "Évolution de l'espérance de vie à la naissance", 
         subtitle = "À partir des données de Gapminder",
         x = "Années", 
         y = "Espérance de vie à la naissance") +
    scale_fill_discrete(name = "Continent", labels = c("Afrique", "Asie", "Europe", "Amérique"))

```

évolution de l'espérance de vie à la naissance en focnction des continents

## Peut-être que ça vous inspirera!

```{r plotly, message=FALSE, warning=FALSE}
library(plotly)
library(gapminder)
df <- gapminder

fig <- df %>%
  plot_ly(
    x = ~ gdpPercap,
    y = ~ lifeExp,
    size = ~ pop,
    color = ~ continent,
    frame = ~ year,
    text = ~ country,
    hoverinfo = "text",
    type = 'scatter',
    mode = 'markers',
    width = "100%",
    height = 600
  )

fig <- fig %>% layout(xaxis = list(type = "log"))

fig <- fig %>%
  animation_button(
    x = 0, xanchor = "left", y = -0.15, yanchor = "bottom"
  )
fig
```

------------------------------------------------------------------------

À votre imagination de jouer!

```{r echo=FALSE, warning=FALSE, message=FALSE}
library(fs)
library(lubridate)
library(tidyverse)
library(skimr)
```

Réimportation des données à chaque document

```{r}
df <- read_csv(file = "data/raw/athlete_events.csv")
```

```{r}
skim(df)
```

Données extrêmes

```{r}
p1 <- ggplot(data = df,
       mapping = aes(x = Age))
p1 + geom_histogram()
p1 + geom_histogram(color = "black",
                    fill = "#facade",
                    binwidth = 1)
```

```{r}
df %>%  
    filter(Age >= 79) %>% 
    select(Name, Age, Team, Games, Sport, Sex)

```

Age vs Sex

```{r}
p2 <- ggplot(data = df,
             mapping = aes(x = Sex, y = Age))
p2 + geom_boxplot()
```

Évolution du ration H:F

```{r}
evolution = df %>% 
    group_by(Year, Sex) %>% 
    summarise(n = n()) %>% 
    mutate(pourcent = n / sum(n)*100)
```

```{r}
p3 = ggplot(evolution, aes(x = Year, y = pourcent))
p3 + geom_line()

evolution_f <- evolution %>% 
    filter(Sex == "F")
evolution_h <- evolution %>% 
    filter(Sex == "M")
p4 <- ggplot(evolution_f, aes(x = Year, y = pourcent)) +
    geom_line()+
    geom_point()
p5 <- ggplot(evolution_h, aes(x = Year, y = pourcent)) +
    geom_line() +
    geom_point()

```
